{"version":3,"file":"signalr.js","sourceRoot":"","sources":["../../../src/services/signalr.ts"],"names":[],"mappings":"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","sourcesContent":["import { ISignalRConnection } from './connection/i.signalr.connection';\r\nimport { SignalRConfiguration } from './signalr.configuration';\r\nimport { SignalRConnection } from './connection/signalr.connection';\r\nimport { NgZone, Injectable, Inject } from '@angular/core';\r\nimport { IConnectionOptions } from './connection/connection.options';\r\nimport { ConnectionTransport } from './connection/connection.transport';\r\nimport { Observable } from 'rxjs';\r\nimport { ConnectionStatus } from './connection/connection.status';\r\nimport { SIGNALR_JCONNECTION_TOKEN } from \"./signalr.module\";\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Injectable()\r\nexport class SignalR {\r\n    private _configuration: SignalRConfiguration;\r\n    private _zone: NgZone;\r\n    private _jHubConnectionFn: any;\r\n\r\n    public constructor(\r\n        configuration: SignalRConfiguration,\r\n        zone: NgZone,\r\n        @Inject(SIGNALR_JCONNECTION_TOKEN) jHubConnectionFn: any /* use type 'any'; Suggested workaround from angular repository: https://github.com/angular/angular/issues/12631 */\r\n    ) {\r\n        this._configuration = configuration;\r\n        this._zone = zone;\r\n        this._jHubConnectionFn = jHubConnectionFn;\r\n    }\r\n\r\n    public createConnection(options?: IConnectionOptions): SignalRConnection {\r\n        const configuration = this.merge(options ? options : {});\r\n\r\n        this.logConfiguration(configuration);\r\n\r\n        // create connection object\r\n        const jConnection = this._jHubConnectionFn(configuration.url);\r\n        jConnection.logging = configuration.logging;\r\n        jConnection.qs = configuration.qs;\r\n\r\n        // create a proxy\r\n        const jProxy = jConnection.createHubProxy(configuration.hubName);\r\n        // !!! important. We need to register at least one function otherwise server callbacks will not work.\r\n        jProxy.on('noOp', () => { /* */ });\r\n\r\n        const hubConnection = new SignalRConnection(jConnection, jProxy, this._zone, configuration);\r\n\r\n        return hubConnection;\r\n    }\r\n\r\n    public connect(options?: IConnectionOptions): Promise<ISignalRConnection> {\r\n        return this.createConnection(options).start();\r\n    }\r\n\r\n    private logConfiguration(configuration: SignalRConfiguration) {\r\n        try {\r\n            const serializedQs = JSON.stringify(configuration.qs);\r\n            const serializedTransport = JSON.stringify(configuration.transport);\r\n            if (configuration.logging) {\r\n                console.log(`Creating connecting with...`);\r\n                console.log(`configuration:[url: '${configuration.url}'] ...`);\r\n                console.log(`configuration:[hubName: '${configuration.hubName}'] ...`);\r\n                console.log(`configuration:[qs: '${serializedQs}'] ...`);\r\n                console.log(`configuration:[transport: '${serializedTransport}'] ...`);\r\n            }\r\n        } catch (err) { /* */ }\r\n    }\r\n\r\n    private merge(overrides: IConnectionOptions): SignalRConfiguration {\r\n        const merged: SignalRConfiguration = new SignalRConfiguration();\r\n        merged.hubName = overrides.hubName || this._configuration.hubName;\r\n        merged.url = overrides.url || this._configuration.url;\r\n        merged.qs = overrides.qs || this._configuration.qs;\r\n        merged.logging = this._configuration.logging;\r\n        merged.jsonp = overrides.jsonp || this._configuration.jsonp;\r\n        merged.withCredentials = overrides.withCredentials || this._configuration.withCredentials;\r\n        merged.transport = overrides.transport || this._configuration.transport;\r\n        merged.executeEventsInZone = overrides.executeEventsInZone || this._configuration.executeEventsInZone;\r\n        merged.executeErrorsInZone = overrides.executeErrorsInZone || this._configuration.executeErrorsInZone;\r\n        merged.executeStatusChangeInZone = overrides.executeStatusChangeInZone || this._configuration.executeStatusChangeInZone;\r\n        merged.pingInterval = overrides.pingInterval || this._configuration.pingInterval;\r\n        return merged;\r\n    }\r\n\r\n}\r\n"]}